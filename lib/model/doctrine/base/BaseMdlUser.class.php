<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('MdlUser', 'doctrine');

/**
 * BaseMdlUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $auth
 * @property integer $confirmed
 * @property integer $policyagreed
 * @property integer $deleted
 * @property integer $mnethostid
 * @property string $username
 * @property string $password
 * @property string $idnumber
 * @property string $firstname
 * @property string $lastname
 * @property string $email
 * @property integer $emailstop
 * @property string $icq
 * @property string $skype
 * @property string $yahoo
 * @property string $aim
 * @property string $msn
 * @property string $phone1
 * @property string $phone2
 * @property string $institution
 * @property string $department
 * @property string $address
 * @property string $city
 * @property string $country
 * @property string $lang
 * @property string $theme
 * @property string $timezone
 * @property integer $firstaccess
 * @property integer $lastaccess
 * @property integer $lastlogin
 * @property integer $currentlogin
 * @property string $lastip
 * @property string $secret
 * @property integer $picture
 * @property string $url
 * @property string $description
 * @property integer $mailformat
 * @property integer $maildigest
 * @property integer $maildisplay
 * @property integer $htmleditor
 * @property integer $ajax
 * @property integer $autosubscribe
 * @property integer $trackforums
 * @property integer $timemodified
 * @property integer $trustbitmask
 * @property string $imagealt
 * @property integer $screenreader
 * @property Doctrine_Collection $MdlRoleAssignments
 * 
 * @method integer             getId()                 Returns the current record's "id" value
 * @method string              getAuth()               Returns the current record's "auth" value
 * @method integer             getConfirmed()          Returns the current record's "confirmed" value
 * @method integer             getPolicyagreed()       Returns the current record's "policyagreed" value
 * @method integer             getDeleted()            Returns the current record's "deleted" value
 * @method integer             getMnethostid()         Returns the current record's "mnethostid" value
 * @method string              getUsername()           Returns the current record's "username" value
 * @method string              getPassword()           Returns the current record's "password" value
 * @method string              getIdnumber()           Returns the current record's "idnumber" value
 * @method string              getFirstname()          Returns the current record's "firstname" value
 * @method string              getLastname()           Returns the current record's "lastname" value
 * @method string              getEmail()              Returns the current record's "email" value
 * @method integer             getEmailstop()          Returns the current record's "emailstop" value
 * @method string              getIcq()                Returns the current record's "icq" value
 * @method string              getSkype()              Returns the current record's "skype" value
 * @method string              getYahoo()              Returns the current record's "yahoo" value
 * @method string              getAim()                Returns the current record's "aim" value
 * @method string              getMsn()                Returns the current record's "msn" value
 * @method string              getPhone1()             Returns the current record's "phone1" value
 * @method string              getPhone2()             Returns the current record's "phone2" value
 * @method string              getInstitution()        Returns the current record's "institution" value
 * @method string              getDepartment()         Returns the current record's "department" value
 * @method string              getAddress()            Returns the current record's "address" value
 * @method string              getCity()               Returns the current record's "city" value
 * @method string              getCountry()            Returns the current record's "country" value
 * @method string              getLang()               Returns the current record's "lang" value
 * @method string              getTheme()              Returns the current record's "theme" value
 * @method string              getTimezone()           Returns the current record's "timezone" value
 * @method integer             getFirstaccess()        Returns the current record's "firstaccess" value
 * @method integer             getLastaccess()         Returns the current record's "lastaccess" value
 * @method integer             getLastlogin()          Returns the current record's "lastlogin" value
 * @method integer             getCurrentlogin()       Returns the current record's "currentlogin" value
 * @method string              getLastip()             Returns the current record's "lastip" value
 * @method string              getSecret()             Returns the current record's "secret" value
 * @method integer             getPicture()            Returns the current record's "picture" value
 * @method string              getUrl()                Returns the current record's "url" value
 * @method string              getDescription()        Returns the current record's "description" value
 * @method integer             getMailformat()         Returns the current record's "mailformat" value
 * @method integer             getMaildigest()         Returns the current record's "maildigest" value
 * @method integer             getMaildisplay()        Returns the current record's "maildisplay" value
 * @method integer             getHtmleditor()         Returns the current record's "htmleditor" value
 * @method integer             getAjax()               Returns the current record's "ajax" value
 * @method integer             getAutosubscribe()      Returns the current record's "autosubscribe" value
 * @method integer             getTrackforums()        Returns the current record's "trackforums" value
 * @method integer             getTimemodified()       Returns the current record's "timemodified" value
 * @method integer             getTrustbitmask()       Returns the current record's "trustbitmask" value
 * @method string              getImagealt()           Returns the current record's "imagealt" value
 * @method integer             getScreenreader()       Returns the current record's "screenreader" value
 * @method Doctrine_Collection getMdlRoleAssignments() Returns the current record's "MdlRoleAssignments" collection
 * @method MdlUser             setId()                 Sets the current record's "id" value
 * @method MdlUser             setAuth()               Sets the current record's "auth" value
 * @method MdlUser             setConfirmed()          Sets the current record's "confirmed" value
 * @method MdlUser             setPolicyagreed()       Sets the current record's "policyagreed" value
 * @method MdlUser             setDeleted()            Sets the current record's "deleted" value
 * @method MdlUser             setMnethostid()         Sets the current record's "mnethostid" value
 * @method MdlUser             setUsername()           Sets the current record's "username" value
 * @method MdlUser             setPassword()           Sets the current record's "password" value
 * @method MdlUser             setIdnumber()           Sets the current record's "idnumber" value
 * @method MdlUser             setFirstname()          Sets the current record's "firstname" value
 * @method MdlUser             setLastname()           Sets the current record's "lastname" value
 * @method MdlUser             setEmail()              Sets the current record's "email" value
 * @method MdlUser             setEmailstop()          Sets the current record's "emailstop" value
 * @method MdlUser             setIcq()                Sets the current record's "icq" value
 * @method MdlUser             setSkype()              Sets the current record's "skype" value
 * @method MdlUser             setYahoo()              Sets the current record's "yahoo" value
 * @method MdlUser             setAim()                Sets the current record's "aim" value
 * @method MdlUser             setMsn()                Sets the current record's "msn" value
 * @method MdlUser             setPhone1()             Sets the current record's "phone1" value
 * @method MdlUser             setPhone2()             Sets the current record's "phone2" value
 * @method MdlUser             setInstitution()        Sets the current record's "institution" value
 * @method MdlUser             setDepartment()         Sets the current record's "department" value
 * @method MdlUser             setAddress()            Sets the current record's "address" value
 * @method MdlUser             setCity()               Sets the current record's "city" value
 * @method MdlUser             setCountry()            Sets the current record's "country" value
 * @method MdlUser             setLang()               Sets the current record's "lang" value
 * @method MdlUser             setTheme()              Sets the current record's "theme" value
 * @method MdlUser             setTimezone()           Sets the current record's "timezone" value
 * @method MdlUser             setFirstaccess()        Sets the current record's "firstaccess" value
 * @method MdlUser             setLastaccess()         Sets the current record's "lastaccess" value
 * @method MdlUser             setLastlogin()          Sets the current record's "lastlogin" value
 * @method MdlUser             setCurrentlogin()       Sets the current record's "currentlogin" value
 * @method MdlUser             setLastip()             Sets the current record's "lastip" value
 * @method MdlUser             setSecret()             Sets the current record's "secret" value
 * @method MdlUser             setPicture()            Sets the current record's "picture" value
 * @method MdlUser             setUrl()                Sets the current record's "url" value
 * @method MdlUser             setDescription()        Sets the current record's "description" value
 * @method MdlUser             setMailformat()         Sets the current record's "mailformat" value
 * @method MdlUser             setMaildigest()         Sets the current record's "maildigest" value
 * @method MdlUser             setMaildisplay()        Sets the current record's "maildisplay" value
 * @method MdlUser             setHtmleditor()         Sets the current record's "htmleditor" value
 * @method MdlUser             setAjax()               Sets the current record's "ajax" value
 * @method MdlUser             setAutosubscribe()      Sets the current record's "autosubscribe" value
 * @method MdlUser             setTrackforums()        Sets the current record's "trackforums" value
 * @method MdlUser             setTimemodified()       Sets the current record's "timemodified" value
 * @method MdlUser             setTrustbitmask()       Sets the current record's "trustbitmask" value
 * @method MdlUser             setImagealt()           Sets the current record's "imagealt" value
 * @method MdlUser             setScreenreader()       Sets the current record's "screenreader" value
 * @method MdlUser             setMdlRoleAssignments() Sets the current record's "MdlRoleAssignments" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMdlUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('mdl_user');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('auth', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => 'manual',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('confirmed', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('policyagreed', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('deleted', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('mnethostid', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('username', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('password', 'string', 32, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 32,
             ));
        $this->hasColumn('idnumber', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('firstname', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('lastname', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('email', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('emailstop', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('icq', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 15,
             ));
        $this->hasColumn('skype', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('yahoo', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('aim', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('msn', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('phone1', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('phone2', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('institution', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 40,
             ));
        $this->hasColumn('department', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('address', 'string', 70, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 70,
             ));
        $this->hasColumn('city', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('country', 'string', 2, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('lang', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => 'en_utf8',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('theme', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('timezone', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '99',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('firstaccess', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('lastaccess', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('lastlogin', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('currentlogin', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('lastip', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 15,
             ));
        $this->hasColumn('secret', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 15,
             ));
        $this->hasColumn('picture', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('mailformat', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('maildigest', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('maildisplay', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '2',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('htmleditor', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('ajax', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('autosubscribe', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('trackforums', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('timemodified', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('trustbitmask', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('imagealt', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('screenreader', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('MdlRoleAssignments', array(
             'local' => 'id',
             'foreign' => 'userid'));
    }
}