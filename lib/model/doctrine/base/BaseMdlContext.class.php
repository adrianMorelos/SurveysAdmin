<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('MdlContext', 'doctrine');

/**
 * BaseMdlContext
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $contextlevel
 * @property integer $instanceid
 * @property string $path
 * @property integer $depth
 * @property Doctrine_Collection $MdlCourse
 * @property Doctrine_Collection $MdlRoleAssignments
 * 
 * @method integer             getId()                 Returns the current record's "id" value
 * @method integer             getContextlevel()       Returns the current record's "contextlevel" value
 * @method integer             getInstanceid()         Returns the current record's "instanceid" value
 * @method string              getPath()               Returns the current record's "path" value
 * @method integer             getDepth()              Returns the current record's "depth" value
 * @method Doctrine_Collection getMdlCourse()          Returns the current record's "MdlCourse" collection
 * @method Doctrine_Collection getMdlRoleAssignments() Returns the current record's "MdlRoleAssignments" collection
 * @method MdlContext          setId()                 Sets the current record's "id" value
 * @method MdlContext          setContextlevel()       Sets the current record's "contextlevel" value
 * @method MdlContext          setInstanceid()         Sets the current record's "instanceid" value
 * @method MdlContext          setPath()               Sets the current record's "path" value
 * @method MdlContext          setDepth()              Sets the current record's "depth" value
 * @method MdlContext          setMdlCourse()          Sets the current record's "MdlCourse" collection
 * @method MdlContext          setMdlRoleAssignments() Sets the current record's "MdlRoleAssignments" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMdlContext extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('mdl_context');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('contextlevel', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('instanceid', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('path', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('depth', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('MdlCourse', array(
             'local' => 'instanceid',
             'foreign' => 'id'));

        $this->hasMany('MdlRoleAssignments', array(
             'local' => 'id',
             'foreign' => 'contextid'));
    }
}